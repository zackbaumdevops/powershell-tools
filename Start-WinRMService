# This function was specifically implemented to invoke WMI objects incompatible with future versions of Powershell Core 5+
# which are incompatible with WMI objects commonly utilized in Windows Powershell 5.1 this function calls Windows Powershell 5.1 and
# uses a Base64 string to pass the Start-WinRM commands /c to a Powershell 5.1 which is normally impossible due to the prevalence of nested quotes 

function Start-WinRMService {
    param (
        [Parameter(Mandatory=$true)]
        [string[]]$ComputerNames
    )

    foreach ($ComputerName in $ComputerNames) {
        $encodedCommand = [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes("Get-WmiObject -ComputerName '$ComputerName' -Class Win32_Service -Filter ""Name='winrm'"" | ForEach-Object { `$_.StartService() }"))
        $startProcessArgs = "-NoExit", "-Command", "Invoke-Expression -Command ([System.Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('$encodedCommand')))"

        Start-Process -FilePath "powershell.exe" -ArgumentList $startProcessArgs
    }
}
